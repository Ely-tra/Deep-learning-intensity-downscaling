{
  "model": {
    "inputs": [
      {"name": "inputs", "shape": "X.shape[1:]"}
    ],
    "outputs": [
      {"name": "outputs"}
    ],
    "layers": [
      {
        "name": "data_augmentation",
        "type": "Sequential",
        "layers": [
          {"type": "RandomRotation", "factor": 0.1},
          {"type": "RandomZoom", "factor": 0.2}
        ]
      },
      {
        "name": "my_conv2d_11",
        "type": "Conv2D",
        "filters": 128,
        "kernel_size": 15,
        "padding": "same",
        "activation": "activ"
      },
      {
        "name": "my_pooling_1",
        "type": "MaxPooling2D",
        "pool_size": 2
      },
      {"type": "BatchNormalization"},
      {
        "name": "my_conv2d_2",
        "type": "Conv2D",
        "filters": 64,
        "kernel_size": 15,
        "padding": "same",
        "activation": "activ"
      },
      {
        "name": "my_pooling_2",
        "type": "MaxPooling2D",
        "pool_size": 2
      },
      {"type": "BatchNormalization"},
      {
        "name": "my_conv2d_3",
        "type": "Conv2D",
        "filters": 256,
        "kernel_size": 9,
        "padding": "same",
        "activation": "activ"
      },
      {
        "name": "my_pooling_3",
        "type": "MaxPooling2D",
        "pool_size": 2
      },
      {
        "name": "my_conv2d_4",
        "type": "Conv2D",
        "filters": 512,
        "kernel_size": 5,
        "padding": "same",
        "activation": "activ"
      },
      {
        "name": "my_conv2d_5",
        "type": "Conv2D",
        "filters": 512,
        "kernel_size": 5,
        "padding": "valid",
        "activation": "activ"
      },
      {"type": "BatchNormalization"},
      {
        "name": "my_flatten",
        "type": "Flatten"
      },
      {
        "type": "Dropout",
        "rate": 0.4
      },
      {
        "type": "conditional",
        "condition": "st_embed",
        "true_branch": [
          {
            "name": "Z_input",
            "type": "Input",
            "shape": [4]
          },
          {
            "type": "Concatenate",
            "inputs": ["previous", "Z_input"]
          }
        ],
        "false_branch": [
          {
            "type": "raise",
            "error": "ValueError",
            "message": "Z must be provided if st_embed is True."
          }
        ]
      },
      {
        "type": "Dense",
        "units": 512,
        "activation": "activ"
      },
      {
        "type": "Dense",
        "units": 312,
        "activation": "activ"
      },
      {
        "name": "my_dense",
        "type": "Dense",
        "units": 1,
        "activation": "activ"
      }
    ]
  }
}
